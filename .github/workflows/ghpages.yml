name: "Update Editor's Copy"

on:
  push:
    paths-ignore:
    - README.md
    - CONTRIBUTING.md
    - LICENSE.md
    - .gitignore
  pull_request:
    paths-ignore:
    - README.md
    - CONTRIBUTING.md
    - LICENSE.md
    - .gitignore

jobs:
  build:
    name: "Update Editor's Copy"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: "Checkout"
      uses: actions/checkout@v5

    - name: "Setup"
      id: setup
      run: date -u "+date=%FT%T" >>"$GITHUB_OUTPUT"

    - name: "Caching"
      uses: actions/cache@v4
      with:
        path: |
          .refcache
          .venv
          .gems
          node_modules
          .targets.mk
        key: i-d-${{ steps.setup.outputs.date }}
        restore-keys: i-d-

    # --- 新增的自动修复步骤 ---
    - name: "Automatic Lint and Fix"
      # 使用同一个 i-d-template 镜像来运行 make fix-lint
      uses: martinthomson/i-d-template@v1
      with:
        make: fix-lint
        # 不需要 token，因为只是修改本地文件
    
    # --- 新增步骤：检查并提交修复后的代码 ---
    - name: "Commit Lint Fixes"
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "Fix: Automated linting (trailing whitespace cleanup)"
        # 确保只有在 `fix-lint` 真的修改了文件时才提交
        commit_options: '--no-edit --amend --skip-ci'
        # 确保提交在当前的分支上
        branch: ${{ github.head_ref || github.ref_name }}
    
    # -----------------------------

    - name: "Build Drafts"
      uses: martinthomson/i-d-template@v1
      with:
        token: ${{ github.token }}

    - name: "Update GitHub Pages"
      uses: martinthomson/i-d-template@v1
      if: ${{ github.event_name == 'push' }}
      with:
        make: gh-pages
        token: ${{ github.token }}

    - name: "Archive Built Drafts"
      uses: actions/upload-artifact@v4
      with:
        name: drafts
        path: |
          draft-*.html
          draft-*.txt
